 411 
   9 # /sbin/modprobe -n -v cramfsinstall /bin/true# /sbin/lsmod | grep cramfs
   5 # /sbin/modprobe -n -v freevxfsinstall /bin/true# /sbin/lsmod | grep freevxfs
   4 # /sbin/modprobe -n -v freevxfsinstall /bin/true# /sbin/lsmod | grep freexvfs
   9 # /sbin/modprobe -n -v hfsinstall /bin/true# /sbin/lsmod | grep hfs
   9 # /sbin/modprobe -n -v hfsplusinstall /bin/true# /sbin/lsmod | grep hfsplus
   9 # /sbin/modprobe -n -v jffs2install /bin/true# /sbin/lsmod | grep jffs2
   9 # /sbin/modprobe -n -v squashfsinstall /bin/true# /sbin/lsmod | grep squashfs
   9 # /sbin/modprobe -n -v udfinstall /bin/true# /sbin/lsmod | grep udf
   8 # cat /etc/securetty
   7 # chkconfig --list chargen-dgram chargen-dgram: off
   7 # chkconfig --list chargen-stream chargen-stream: off
   7 # chkconfig --list daytime-dgram daytime-dgram: off
   7 # chkconfig --list daytime-stream daytime-stream: off
   7 # chkconfig --list echo-dgram echo-dgram: off
   7 # chkconfig --list echo-stream echo-stream: off
   1 # chkconfig --list mctransmctrans 0: off 1: off 2: off 3: off 4: off 5: off 6: off
   2 # chkconfig --list rhnsd rhnsd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off
   3 # chkconfig --list syslogsyslog 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list rsyslogrsyslog 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   7 # chkconfig --list tcpmux-servertcpmux-server: off
   1 # chkconfig --list yum-updatesdyum-updatesd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off
   4 # df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d ( -perm -0002 -a ! -perm -1000 ) 2>/dev/null
   4 # df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
   1 # find / -type d ( -perm -0002 -a ! -perm -1000 ) 2>/dev/null
   3 # gconftool-2 --get /apps/gdm/simple-greeter/banner_message_text
   3 # gconftool-2 -get /apps/gdm/simple-greeter/banner_message_text
   8 # grep  /etc/fstab NOTE: Verify that noexec is an option
   9 # grep  /etc/fstabVerify that nodev is an option
   1 # grep  /etc/fstabVerify that noexec is an option
   9 # grep  /etc/fstabVerify that nosuid is an option
   1 # grep "" /usr/share/gdm/themes/RHEL/RHEL.xml
   4 # grep "[[:space:]]/home[[:space:]]" /etc/fstab /home
   4 # grep "[[:space:]]/home[[:space:]]" /etc/fstabVerify that nodev is an option# mount | grep /home on  type  (nodev) NOTE: There may be other options listed for this filesystem
   4 # grep "[[:space:]]/var/log/audit[[:space:]]" /etc/fstab /var/log/audit
   4 # grep "[[:space:]]/var/log[[:space:]]" /etc/fstab /var/log
   4 # grep "[[:space:]]/var[[:space:]]" /etc/fstab /var
   2 # grep "^UMASK" /etc/login.defsUMASK 077
   8 # grep "^root:" /etc/passwd | cut -f4 -d:0
   5 # grep "^umask 077" /etc/bashrcumask 077# grep "^umask 077" /etc/profile.d/*umask 077
   2 # grep "^umask 077" /etc/bashrcumask 077# grep "^umask 077" /etc/profileumask 077
   3 # grep '$ModLoad imtcp.so' /etc/rsyslog.conf$ModLoad imtcp.so# grep '$InputTCPServerRun' /etc/rsyslog.conf$InputTCPServerRun 514
   1 # grep '$ModLoad' /etc/rsyslog.conf$ModLoad imtcp.so# grep '$InputTCPServerRun' /etc/rsyslog.conf$InputTCPServerRun 514
   3 # grep /home /etc/fstab /home ext3
   2 # grep /home /etc/fstabVerify that nodev is an option# mount | grep /home on  type  (nodev) NOTE: There may be other options listed for this filesystem
   1 # grep /home /etc/fstabVerify that nodev is an option# mount | grep /home on  type  (nodev) Note: There may be other options listed for this filesystem
   3 # grep /var/log /etc/fstab /var/log ext3
   3 # grep /var/log/audit /etc/fstab /var/log/audit ext3
   9 # grep PASS_MAX_DAYS /etc/login.defsPASS_MAX_DAYS 90# chage --list Maximum number of days between password change: 90
   5 # grep PASS_MIN_DAYS /etc/login.defsPASS_MAX_DAYS 7# chage --list Minimum number of days between password change: 7
   1 # grep PASS_MIN_DAYS /etc/login.defsPASS_MAX_DAYS 7# chage --list Miniumum number of days between password change: 7
   2 # grep PASS_MIN_DAYS /etc/login.defsPASS_MIN_DAYS 7# chage --list Minimum number of days between password change: 7
   1 # grep PASS_MIN_DAYS /etc/login.defsPASS_MIX_DAYS 7# chage --list Miniumum number of days between password change: 7
   9 # grep PASS_WARN_AGE /etc/login.defsPASS_WARN_AGE 7# chage --list Number of days of warning before password expires: 7
   1 # grep SYSLOGD_OPTIONS /etc/sysconfig/syslog-m 0 -r -s example.com (if designated as a log host)-m 0 (if not designated as a log host)
   9 # grep pam_wheel.so /etc/pam.d/suauth required pam_wheel.so use_uid# grep wheel /etc/groupwheel:x:10:root,
   1 # grep root /etc/passwd | cut -f4 -d:0
   6 # rpm -q setroubleshootsetroubleshoot..
   1 # systemctl is-enabled rhnsdEnsure result is not enabled.
   7 # useradd -D | grep INACTIVE
   2 # useradd -D | grep INACTIVEINACTIVE=35
   1 #!/bin/bash defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon"/bin/cat /etc/passwd | while:do x=`line` if [ "$x" = "" ] then break fi userid=`echo "$x" | cut -f1 -d':'` found=0 for n in $defUsers do if [ $userid = "$n" ] then found=1 break fi done if [ $found -eq 1 ] then continue fi groupid=`echo "$x" | /bin/cut -f4 -d':'` /bin/cat /etc/group | while : do x=`line` if [ "$x" = "" ] then echo "Groupid $groupid does not exist in /etc/group, but is used by $userid" break fi y=`echo $x | cut -f3 -d":"` if [ $y -eq $groupid ] then break fi donedone
   1 #!/bin/bash echo "The Output for the Audit of Control 10.13 - Check That Users Are Defined Home Directories is"defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon" cat /etc/passwd | awk -F: '{ print $1 " " $6 }' | while read user dir do found=0 for n in $defUsers do if [ "$user" = "$n" ] then found=1 break fi done if [ $found -eq 0 ] then if [ -z "$dir" ] then echo "User $user has no home directory." fi fi done
   1 #!/bin/bash echo "The Output from the Audit of Control 9.20 - Check for Presence of User .netrc Files is"for dir in `logins -ox | /bin/awk -F: '($8 == "PS") { print $6 }'`; do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then echo ".netrc file $file exists" fi donedone
   4 #!/bin/bash for dir in `/bin/cat /etc/passwd | /bin/awk -F: '{ print $6 }'`; do if [ ! -h "$dir/.netrc" -a -f "$dir/.netrc" ]; then echo ".netrc file $dir/.netrc exists" fidone
   2 #!/bin/bash for dir in `/bin/cat /etc/passwd |\ /bin/awk -F: '{ print $6 }'`; do if [ ! -h "$dir/.netrc" -a -f "$dir/.netrc" ]; then echo ".netrc file $dir/.netrc exists" fidone
   2 #!/bin/bash for dir in `/bin/cat /etc/passwd |\ /usr/bin/awk -F: '{ print $6 }'`; do if [ ! -h "$dir/.netrc" -a -f "$dir/.netrc" ]; then echo ".netrc file $dir/.netrc exists" fidone
   1 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -group -ls
   7 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup -ls
   8 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser -ls
   6 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
   2 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002 -print
   8 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000 -print
   8 #!/bin/bashdf --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000 -print
   1 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown) | /bin/awk -F: '($8 == "PS" & do dirperm=`/bin/ls -ld $dir | /bin/cut -f1 -d" "` if [ `echo $dirperm | /bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c8 ` != "-" ]; then echo "Other Read permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c10 ` != "-" ]; then echo "Other Execute permission set on directory $dir" fidone
   4 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' | /bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do for file in $dir/.rhosts; do if [ ! -h "$file" -a -f "$file" ]; then echo ".rhosts file in $dir" fi donedone
   4 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' | /bin/awk -F: '($8 == "PS" & do dirperm=`/bin/ls -ld $dir | /bin/cut -f1 -d" "` if [ `echo $dirperm | /bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c8 ` != "-" ]; then echo "Other Read permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c10 ` != "-" ]; then echo "Other Execute permission set on directory $dir" fidone
   1 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' | /bin/awk -F: '($8 == "PS" & do for file in $dir/.rhosts; do if [ ! -h "$file" -a -f "$file" ]; then echo ".rhosts file in $dir" fi donedone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' | /usr/bin/awk -F: '($7 != "/usr/sbin/nologin") { print $6 }'`; do if [ -d $dir ]; then dirperm=`/bin/ls -ld $dir | /usr/bin/cut -f1 -d" "` if [ `echo $dirperm | /usr/bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on directory $dir" fi if [ `echo $dirperm | /usr/bin/cut -c8 ` != "-" ]; then echo "Other Read permission set on directory $dir" fi if [ `echo $dirperm | /usr/bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on directory $dir" fi if [ `echo $dirperm | /usr/bin/cut -c10 ` != "-" ]; then echo "Other Execute permission set on directory $dir" fi fidone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' |\ /bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do for file in $dir/.rhosts; do if [ ! -h "$file" -a -f "$file" ]; then echo ".rhosts file in $dir" fi donedone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' |\ /bin/awk -F: '($8 == "PS" & do dirperm=`/bin/ls -ld $dir | /bin/cut -f1 -d" "` if [ `echo $dirperm | /bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c8 ` != "-" ]; then echo "Other Read permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on directory $dir" fi if [ `echo $dirperm | /bin/cut -c10 ` != "-" ]; then echo "Other Execute permission set on directory $dir" fidone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' |\ /usr/bin/awk -F: '($7 != "/usr/sbin/nologin") { print $6 }'`; do for file in $dir/.rhosts; do if [ ! -h "$file" -a -f "$file" ]; then echo ".rhosts file in $dir" fi donedone
   6 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' | /bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do for file in $dir/.[A-Za-z0-9]*; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "` if [ `echo $fileperm | /bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on file $file" fi if [ `echo $fileperm | /bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on file $file" fi fi donedone
   4 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' | /bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "` if [ `echo $fileperm | /bin/cut -c5 ` != "-" ] then echo "Group Read set on $file" fi if [ `echo $fileperm | /bin/cut -c6 ` != "-" ] then echo "Group Write set on $file" fi if [ `echo $fileperm | /bin/cut -c7 ` != "-" ] then echo "Group Execute set on $file" fi if [ `echo $fileperm | /bin/cut -c8 ` != "-" ] then echo "Other Read set on $file" fi if [ `echo $fileperm | /bin/cut -c9 ` != "-" ] then echo "Other Write set on $file" fi if [ `echo $fileperm | /bin/cut -c10 ` != "-" ] then echo "Other Execute set on $file" fi fi donedone
   1 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' | /bin/awk -F: '($8 == "PS" & do for file in $dir/.[A-Za-z0-9]*; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "` if [ `echo $fileperm | /bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on file $file" fi if [ `echo $fileperm | /bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on file $file" fi fi donedone
   1 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' | /bin/awk -F: '($8 == "PS" & do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "` if [ `echo $fileperm | /bin/cut -c5 ` != "-" ] then echo "Group Read set on $file" fi if [ `echo $fileperm | /bin/cut -c6 ` != "-" ] then echo "Group Write set on $file" fi if [ `echo $fileperm | /bin/cut -c7 ` != "-" ] then echo "Group Execute set on $file" fi if [ `echo $fileperm | /bin/cut -c8 ` != "-" ] then echo "Other Read set on $file" fi if [ `echo $fileperm | /bin/cut -c9 ` != "-" ] then echo "Other Write set on $file" fi if [ `echo $fileperm | /bin/cut -c10 ` != "-" ] then echo "Other Execute set on $file" fi fi donedone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' | /usr/bin/awk -F: '($7 != "/usr/sbin/nologin") { print $6 }'`; do for file in $dir/.[A-Za-z0-9]*; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /usr/bin/cut -f1 -d" "` if [ `echo $fileperm | /usr/bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on file $file" fi if [ `echo $fileperm | /usr/bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on file $file" fi fi donedone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' |\ /bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "` if [ `echo $fileperm | /bin/cut -c5 ` != "-" ] then echo "Group Read set on $file" fi if [ `echo $fileperm | /bin/cut -c6 ` != "-" ] then echo "Group Write set on $file" fi if [ `echo $fileperm | /bin/cut -c7 ` != "-" ] then echo "Group Execute set on $file" fi if [ `echo $fileperm | /bin/cut -c8 ` != "-" ] then echo "Other Read set on $file" fi if [ `echo $fileperm | /bin/cut -c9 ` != "-" ] then echo "Other Write set on $file" fi if [ `echo $fileperm | /bin/cut -c10 ` != "-" ] then echo "Other Execute set on $file" fi fi donedone
   2 #!/bin/bashfor dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' |\ /usr/bin/awk -F: '($7 != "/usr/sbin/nologin") { print $6 }'`; do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then fileperm=`/bin/ls -ld $file | /usr/bin/cut -f1 -d" "` if [ `echo $fileperm | /usr/bin/cut -c5 ` != "-" ] then echo "Group Read set on $file" fi if [ `echo $fileperm | /usr/bin/cut -c6 ` != "-" ] then echo "Group Write set on $file" fi if [ `echo $fileperm | /usr/bin/cut -c7 ` != "-" ] then echo "Group Execute set on $file" fi if [ `echo $fileperm | /usr/bin/cut -c8 ` != "-" ] then echo "Other Read set on $file" fi if [ `echo $fileperm | /usr/bin/cut -c9 ` != "-" ] then echo "Other Write set on $file" fi if [ `echo $fileperm | /usr/bin/cut -c10 ` != "-" ] then echo "Other Execute set on $file" fi fi donedone
   1 #!/bin/bashfor i in `/bin/egrep '(ext3|ext2)' /etc/fstab | /bin/awk '{print $2}'`do /usr/bin/find $i -xdev ( -type f -o -type d) -nogroup -printdone
   1 #!/bin/bashfor i in `/bin/egrep '(ext3|ext2)' /etc/fstab | /bin/awk '{print $2}'`do /usr/bin/find $i -xdev ( -type f -o -type d) -nouser -printdone
   1 #!/bin/bashfor i in `/bin/egrep '(ext3|ext2)' /etc/fstab | /bin/awk '{print $2}'`do /usr/bin/find $i -xdev -type f -perm -2000 -printdone
   1 #!/bin/bashfor i in `/bin/egrep '(ext3|ext2)' /etc/fstab | /bin/awk '{print $2}'`do /usr/bin/find $i -xdev -type f -perm -4000 -printdone -print
   1 #!/bin/bashfor i in `/bin/egrep '(ext4|ext3|ext2)' /etc/fstab | /bin/awk '{print $2}'`do/usr/bin/find $i -xdev -type f -perm -0002 -printdone
   7 #!/bin/bashif [ "`echo $PATH | /bin/grep :: `" != "" ]; then echo "Empty Directory in PATH (::)"fiif [ "`echo $PATH | bin/grep :$`" != "" ]; then echo "Trailing : in PATH"fip=`echo $PATH | /bin/sed -e 's/::/:/' -e 's/:$//' -e 's/:/ /g'`set -- $pwhile [ "$1" != "" ]; do if [ "$1" = "." ]; then echo "PATH contains ." shift continue fi if [ -d $1 ]; then dirperm=`/bin/ls -ldH $1 | /bin/cut -f1 -d" "` if [ `echo $dirperm | /bin/cut -c6 ` != "-" ]; then echo "Group Write permission set on directory $1" fi if [ `echo $dirperm | /bin/cut -c9 ` != "-" ]; then echo "Other Write permission set on directory $1" fi dirown=`ls -ldH $1 | awk '{print $3}'` if [ "$dirown" != "root" ] ; then echo $1 is not owned by root fi else echo $1 is not a directory fi shiftdone
   2 #!/bin/bashif [ "`echo $PATH | grep :: `" != "" ]; then echo "Empty Directory in PATH (::)"fiif [ "`echo $PATH | bin/grep :$`" != "" ]; then echo "Trailing : in PATH"fip=`echo $PATH | sed -e 's/::/:/' -e 's/:$//' -e 's/:/ /g'`set -- $pwhile [ "$1" != "" ]; do if [ "$1" = "." ]; then echo "PATH contains ." shift continue fi if [ -d $1 ]; then dirperm=`ls -ldH $1 | cut -f1 -d" "` if [ `echo $dirperm | cut -c6 ` != "-" ]; then echo "Group Write permission set on directory $1" fi if [ `echo $dirperm | cut -c9 ` != "-" ]; then echo "Other Write permission set on directory $1" fi dirown=`ls -ldH $1 | awk '{print $3}'` if [ "$dirown" != "root" ] ; then echo $1 is not owned by root fi else echo $1 is not a directory fi shiftdone
   1 #grep /var /etc/fstab  /var ext3
   2 #grep /var /etc/fstab /var ext3
   1 Check the /etc/securetty for any insecure terminals:# cat /etc/securetty
   2 Check the status of AppArmor:# apparmor_status apparmor module is loaded.18 profiles are loaded.18 profiles are in enforce mode. /sbin/dhclient /usr/bin/evince /usr/bin/evince-previewer /usr/bin/evince-previewer//launchpad_integration /usr/bin/evince-previewer//sanitized_helper /usr/bin/evince-thumbnailer /usr/bin/evince-thumbnailer//sanitized_helper /usr/bin/evince//launchpad_integration /usr/bin/evince//sanitized_helper /usr/lib/NetworkManager/nm-dhcp-client.action /usr/lib/connman/scripts/dhclient-script /usr/lib/cups/backend/cups-pdf /usr/lib/lightdm/lightdm/lightdm-guest-session-wrapper /usr/lib/lightdm/lightdm/lightdm-guest-session-wrapper//chromium_browser /usr/lib/telepathy/mission-control-5 /usr/lib/telepathy/telepathy-* /usr/sbin/cupsd /usr/sbin/tcpdump0 profiles are in complain mode.2 processes have profiles defined.2 processes are in enforce mode. /sbin/dhclient (779)  /usr/lib/telepathy/mission-control-5 (2022) 0 processes are in complain mode.0 processes are unconfined but have a profile definedEnsure profiles are loaded, no profiles are in complain mode, and no processes are unconfined.
   2 Create a script as shown below and run it:#!/bin/bashfor i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do grep -q -P "^.*?:[^:]*:$i:" /etc/group if [ $? -ne 0 ]; then echo "Group $i is referenced by /etc/passwd but does not exist in /etc/group" fidone
   6 Create a script as shown below and run it:#!/bin/bashfor i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do grep -q -P "^.*?:x:$i:" /etc/group if [ $? -ne 0 ]; then echo "Group $i is referenced by /etc/passwd but does not exist in /etc/group" fidone
   2 Ensure no start conditions listed for autofs:# initctl show-config autofsautofs
   2 Ensure no start conditions listed for avahi-daemon:# initctl show-config avahi-daemonavahi-daemon
   2 Ensure no start conditions listed for cups:# initctl show-config cupscups
   2 Ensure no start conditions listed for dovecot:# initctl show-config dovecotdovecot
   2 Ensure no start conditions listed for isc-dhcp-server or isc-dhcp-server6:# initctl show-config isc-dhcp-serverisc-dhcp-server# initctl show-config isc-dhcp-server6isc-dhcp-server6
   2 Ensure no start conditions listed for rpcbind-boot:# initctl show-config rpcbind-bootrpcbind-bootRun the following to ensure no start links for nfs-kernel-server exist in /etc/rc*.d:# ls /etc/rc*.d/S*nfs-kernel-serverNo results should be returned.
   2 Ensure no start conditions listed for smbd:# initctl show-config smbdsmbd
   2 Ensure no start conditions listed for squid3:# initctl show-config squid3squid3
   2 Ensure no start conditions listed for vsftpd:# initctl show-config vsftpdvsftpd
   2 Ensure no start conditions listed for xinetd:# initctl show-config xinetdxinetd
   2 Ensure proper start conditions listed for cron:# /sbin/initctl show-config croncron start on runlevel [2345] stop on runlevel [!2345]
   2 Ensure rsyslog is installed:# dpkg -s rsyslogEnsure package status is installed ok installed.
   2 Ensure that the rsync service is not enabled:# grep ^RSYNC_ENABLE /etc/default/rsyncRSYNC_ENABLE=false
   2 Ensure that the rsyslog service is active:# initctl show-config rsyslogrsyslog start on filesystem stop on runlevel [06]
   2 Ensure the chargen services are not enabled:# grep ^chargen /etc/inetd.confNo results should be returned.
   2 Ensure the daytime services are not enabled:# grep ^daytime /etc/inetd.confNo results should be returned.
   2 Ensure the discard services are not enabled:# grep ^discard /etc/inetd.confNo results should be returned.
   2 Ensure the echo services are not enabled:# grep ^echo /etc/inetd.confNo results should be returned.
   2 Ensure the rsh services are not enabled:# grep ^shell /etc/inetd.conf# grep ^login /etc/inetd.conf# grep ^exec /etc/inetd.confNo results should be returned.
   2 Ensure the talk services are not enabled:# grep ^talk /etc/inetd.conf# grep ^ntalk /etc/inetd.confNo results should be returned.
   2 Ensure the telnet services is not enabled:# grep ^telnet /etc/inetd.confNo results should be returned.
   2 Ensure the tftp service is not enabled:# grep ^tftp /etc/inetd.confNo results should be returned.
   2 Ensure the time services are not enabled:# grep ^time /etc/inetd.confNo results should be returned.
   2 Ensure there are no user in the shadow group:grep ^shadow /etc/groupEnsure no users have shadow as their primary group:awk -F: '($4 == "__") { print }' /etc/passwd
   2 Ensure ufw is active:# ufw statusStatus: active
   6 For 64 bit systems perform the following command and ensure the output is as shown to determine if filesystem mounts are recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep mounts /etc/audit/audit.rules-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mountsFor 32 bit systems perform the following command and ensure the output is as shown to determine if filesystem mounts are recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep mounts /etc/audit/audit.rules-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts
   1 For 64 bit systems perform the following command and ensure the output is as shown to determine if filesystem mounts are recorded.# grep mounts /etc/audit/audit.rules-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts For 32 bit systems perform the following command and ensure the output is as shown to determine if filesystem mounts are recorded.# grep mounts /etc/audit/audit.rules-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts
   2 For 64 bit systems perform the following command and ensure the output is as shown to determine if filesystem mounts are recorded.# grep mounts /etc/audit/audit.rules-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mountsFor 32 bit systems perform the following command and ensure the output is as shown to determine if filesystem mounts are recorded.# grep mounts /etc/audit/audit.rules-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts
   5 For 64 bit systems, perform the following command and ensure the output is as shown to determine if file deletion events by user are recorded.# grep delete /etc/audit/audit.rules-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete For 32 bit systems, perform the following command and ensure the output is as shown to determine if file deletion events by user are recorded.# grep delete /etc/audit/audit.rules-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete
   4 For 64 bit systems, perform the following command and ensure the output is as shown to determine if file deletion events by user are recorded.# grep delete /etc/audit/audit.rules-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 \-F auid!=4294967295 -k delete-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 \-F auid!=4294967295 -k delete For 32 bit systems, perform the following command and ensure the output is as shown to determine if file deletion events by user are recorded.# grep delete /etc/audit/audit.rules-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 \-F auid!=4294967295 -k delete
   4 For 64 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod For 32 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
   2 For 64 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod For 32 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
   1 For 64 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded.# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod For 32 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded.# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
   2 For 64 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded.# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod For 32 bit systems, perform the following command and ensure the output is as shown to determine if permission modifications are being recorded.# grep perm_mod /etc/audit/audit.rules-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 \-F auid!=4294967295 -k perm_mod-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
   1 For each LOGFILE listed in the /etc/syslog.conf file, perform the following commands and verify that the owner:group is root:root and the permissions are 0600 (for sites that do not use a security group) and root:__ with permissions of 0640 (for sites that use a secure group):# ls -l __
   8 For each __ listed in the /etc/rsyslog.conf file, perform the following command and verify that the _:_ is root:root and the permissions are 0600 (for sites that have not implemented a secure group) and root:securegrp with permissions of 0640 (for sites that have implemented a secure group):# ls -l __
   1 For each __ listed in the /etc/rsyslog.conf file, perform the following command and verify that the __:__ is root:root and the permissions are 0600 (for sites that have not implemented a secure group) and root:securegrp with permissions of 0640 (for sites that have implemented a secure group):# ls -l __
   2 If the X Window system is in use ensure that a warning banner consistent with your organizations policy is in place.
   1 If the permissions of the /etc/hosts.allow file are incorrect, run the following command to correct them:# /bin/chmod 644 /etc/hosts.allow
   1 If the user and group ownership of the /etc/ssh/sshd_config file are incorrect, run the following command to correct them:# chown root:root /etc/ssh/sshd_config If the permissions are incorrect, run the following command to correct them:# chmod 644 /etc/ssh/sshd_config
   4 On 64 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files. Note: "-a always,exit" may be specified as "-a exit,always".# grep access /etc/audit/audit.rules-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access On 32 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files. Note: "-a always,exit" may be specified as "-a exit,always".# grep access /etc/audit/audit.rules-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
   2 On 64 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files. Note: "-a always,exit" may be specified as "-a exit,always".# grep access /etc/audit/audit.rules-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access On 32 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files. Note: "-a always,exit" may be specified as "-a exit,always".# grep access /etc/audit/audit.rules-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
   1 On 64 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files.# grep access /etc/audit/audit.rules-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access On 32 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files.# grep access /etc/audit/audit.rules-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
   2 On 64 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files.# grep access /etc/audit/audit.rules-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access On 32 bit systems, perform the following command and ensure the output is as shown to determine if there are unsuccessful attempts to access files.# grep access /etc/audit/audit.rules-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \-F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
   6 On a 64 bit system, perform the following command and ensure the output is as shownto determine if events that modify the system's environment are recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep system-locale /etc/audit/audit.rules-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale-w /etc/issue -p wa -k system-locale-w /etc/issue.net -p wa -k system-locale-w /etc/hosts -p wa -k system-locale-w /etc/sysconfig/network -p wa -k system-locale For 32 bit systems, perform the following command and ensure the output is as shown to determine if events that modify the system's environment are recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep system-locale /etc/audit/audit.rules-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale-w /etc/issue -p wa -k system-locale-w /etc/issue.net -p wa -k system-locale-w /etc/hosts -p wa -k system-locale-w /etc/sysconfig/network -p wa -k system-locale
   1 On a 64 bit system, perform the following command and ensure the output is as shownto determine if events that modify the system's environment are recorded.# grep system-locale /etc/audit/audit.rules-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale-w /etc/issue -p wa -k system-locale-w /etc/issue.net -p wa -k system-locale-w /etc/hosts -p wa -k system-locale-w /etc/sysconfig/network -p wa -k system-locale For 32 bit systems, perform the following command and ensure the output is as shown to determine if events that modify the system's environment are recorded.# grep system-locale /etc/audit/audit.rules-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale-w /etc/issue -p wa -k system-locale-w /etc/issue.net -p wa -k system-locale-w /etc/hosts -p wa -k system-locale-w /etc/sysconfig/network -p wa -k system-locale
   2 On a 64 bit system, perform the following command and ensure the output is as shownto determine if events that modify the system's environment are recorded.# grep system-locale /etc/audit/audit.rules-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale-w /etc/issue -p wa -k system-locale-w /etc/issue.net -p wa -k system-locale-w /etc/hosts -p wa -k system-locale-w /etc/network -p wa -k system-locale For 32 bit systems, perform the following command and ensure the output is as shown to determine if events that modify the system's environment are recorded.# grep system-locale /etc/audit/audit.rules-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale-w /etc/issue -p wa -k system-locale-w /etc/issue.net -p wa -k system-locale-w /etc/hosts -p wa -k system-locale-w /etc/network -p wa -k system-locale
   8 Perform the following command and make sure that the MTA is listening on the loopback address (127.0.0.1):# netstat -an | grep LIST | grep ":25[[:space:]]"tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN
   1 Perform the following command and make sure that the MTA is listening on the loopback address (127.0.0.1):# netstat -an | grep LIST | grep 25tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN
   7 Perform the following command to determine if there are any packages that need to be updated:# yum check-update
   1 Perform the following command to verify that rsyslog is installed. # yum list rsyslogrsyslog.
   6 Perform the following command to verify that rsyslog is installed.# rpm -q rsyslogrsyslog..
   1 Perform the following command to verify that the selinux packages are installed.# rpm -q libselinuxlibselinux..# rpm -q libselinux-utilslibselinux-utils..# rpm -q policycoreutilspolicycoreutils..
   2 Perform the following commands to check if OS information is set to be displayed in the system login banners:# egrep '(\\v|\\r|\\m|\\s)' /etc/issue# egrep '(\\v|\\r|\\m|\\s)' /etc/motd# egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
   2 Perform the following commands to check if OS information is set to be displayed in the system login banners:# egrep '(\\v|\\r|\\m|\\s)' /etc/issue# egrep '(\\v|\\r|\\m|\\s)' /etc/motd# egrep'(\\v|\\r|\\m|\\s)' /etc/issue.net
   5 Perform the following commands to check if OS information is set to be displayed in the system login banners:# egrep '(\v|\r|\m|\s)' /etc/issue# egrep '(\v|\r|\m|\s)' /etc/motd# egrep'(\v|\r|\m|\s)' /etc/issue.net
   2 Perform the following to determine if /boot/grub/grub.cfg is configured to log processes that start prior to auditd.# grep "linux" /boot/grub/grub.cfgMake sure each line that starts with linux has the audit=1 parameter set.
   3 Perform the following to determine if /boot/grub2/grub.cfg is configured to log processes that start prior to auditd.# grep "linux" /boot/grub2/grub.cfgMake sure each line that starts with linux has the audit=1 parameter set.
   2 Perform the following to determine if /etc/grub.conf is configured to log processes that start prior to auditd. # grep "kernel" /etc/grub.confMake sure each line that starts with kernel has the audit=1 parameter set.
   1 Perform the following to determine if /etc/grub.conf is configured to log processes that start prior to auditd.# grep "audit=1" /etc/grub.confMake sure each line that starts with kernel has the audit=1 parameter set.
   1 Perform the following to determine if /etc/grub.conf is configured to log processes that start prior to auditd.# grep "kernel" /etc/grub.confMake sure each line that starts with kernel has the audit=1 parameter set.
   1 Perform the following to determine if /etc/sysconfig/init is configured correctly:# grep SINGLE /etc/sysconfig/initSINGLE=/sbin/sulogin
   6 Perform the following to determine if AIDE is installed.# rpm -q aideaide..
   1 Perform the following to determine if AIDE is installed.# yum list aideaide.   installed
   4 Perform the following to determine if Avahi is disabled.# chkconfig --list avahi-daemonavahi-daemon: 0:off 1:off 2:off 3:off 4:off 5:off 6:off
   3 Perform the following to determine if Avahi is disabled.# systemctl is-enabled avahi-daemonEnsure result is not enabled.
   1 Perform the following to determine if Avahi's port is restricted:# grep "^disallow-other-stacks=yes" /etc/avahi/avahi-daemon.confdisallow-other-stacks=yes
   4 Perform the following to determine if CUPS is disabled.# chkconfig --list cupschkconfig: 0:off 1:off 2:off 3:off 4:off 5:off 6:off
   3 Perform the following to determine if CUPS is disabled.# systemctl is-enabled cupsdisabled
   1 Perform the following to determine if DCCP is disabled.# grep "install dccp /bin/true" /etc/modprobe.confinstall dccp /bin/true
   8 Perform the following to determine if DCCP is disabled.# grep "install dccp /bin/true" /etc/modprobe.d/CIS.confinstall dccp /bin/true
   6 Perform the following to determine if DHCP is disabled.# rpm -q dhcppackage dhcp is not installed
   1 Perform the following to determine if DHCP is disabled.# yum list dhcpdhcp.
   6 Perform the following to determine if DNS is disabled on the system.# rpm -q bindpackage bind is not installed
   1 Perform the following to determine if DNS is disabled on the system.# yum list bindbind.
   3 Perform the following to determine if ExecShield is enabled.# sysctl kernel.exec-shieldkernel.exec-shield = 1
   6 Perform the following to determine if FTP is disabled.# rpm -q vsftpdpackage vsftpd is not installed
   1 Perform the following to determine if FTP is disabled.# yum list vsftpdvsftpd.
   9 Perform the following to determine if ICMP redirect messages will be rejected from known gateways.# /sbin/sysctl net.ipv4.conf.all.secure_redirectsnet.ipv4.conf.all.secure_redirects = 0# /sbin/sysctl net.ipv4.conf.default.secure_redirectsnet.ipv4.conf.default.secure_redirects = 0
   9 Perform the following to determine if ICMP redirect messages will be rejected.# /sbin/sysctl net.ipv4.conf.all.accept_redirectsnet.ipv4.conf.all.accept_redirects = 0# /sbin/sysctl net.ipv4.conf.default.accept_redirectsnet.ipv4.conf.default.accept_redirects = 0
   3 Perform the following to determine if IP6Tables is enabled:# chkconfig --list ip6tablesip6tables 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   1 Perform the following to determine if IPtables is enabled.# chkconfig --list iptablesiptables 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   3 Perform the following to determine if IPtables is enabled:# chkconfig --list iptablesiptables 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   2 Perform the following to determine if IPv6 is enabled# grep NETWORKING_IPV6 /etc/sysconfig/networkNETWORKING_IPV6=no # grep IPV6INIT /etc/sysconfig/networkIPV6INIT=no# grep ipv6 /etc/modprobe.d/ipv6.confoptions ipv6 disable=1
   1 Perform the following to determine if IPv6 is enabled# grep ipv6 /etc/modprobe.confoptions ipv6 "disable=1"
   3 Perform the following to determine if IPv6 is enabled# grep net.ipv6.conf.all.disable_ipv6 /etc/sysctl.confnet.ipv6.conf.all.disable_ipv6=1# /sbin/sysctl net.ipv6.conf.all.disable_ipv6net.ipv6.conf.all.disable_ipv6=1
   1 Perform the following to determine if IPv6 is enabled# grep net.ipv6.conf.all.disable_ipv6 /etc/sysctl.confnet.ipv6.conf.all.disable_ipv6=1# sysctl net.ipv6.conf.all.disable_ipv6net.ipv6.conf.all.disable_ipv6=1
   2 Perform the following to determine if IPv6 redirects are disabled.# /sbin/sysctl net.ipv6.conf.all.accept_redirectsnet.ipv4. net.ipv6.conf.all.accept_redirect = 0# /sbin/sysctl net.ipv6.conf.default.accept_redirectsnet.ipv4. net.ipv6.conf.default.accept_redirect = 0
   7 Perform the following to determine if IPv6 redirects are disabled.# /sbin/sysctl net.ipv6.conf.all.accept_redirectsnet.ipv6.conf.all.accept_redirect = 0# /sbin/sysctl net.ipv6.conf.default.accept_redirectsnet.ipv6.conf.default.accept_redirect = 0
   6 Perform the following to determine if LDAP is running.# rpm -q openldap-serverspackage openldap-servers is not installed# rpm -q openldap-clientspackage openldap-clients is not installed
   1 Perform the following to determine if LDAP is running.# yum list openldap-serversopenldap-servers.
   3 Perform the following to determine if NFS is disabled.# chkconfig --list nfslocknfslock: 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list rpcgssdrpcgssd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list rpcbindrpcbind: 0:off 1:off 2:off 3:off 4:off 5:off 6:off # chkconfig --list rpcidmapdrpcidmapd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off # chkconfig --list rpcsvcgssdrpcsvcgssd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off
   1 Perform the following to determine if NFS is disabled.# chkconfig --list nfslocknfslock: 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list rpcgssdrpcgssd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list rpcidmapdrpcidmapd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list portmapportmap: 0:off 1:off 2:off 3:off 4:off 5:off 6:off
   3 Perform the following to determine if NFS is disabled.# systemctl is-enabled nfslock# systemctl is-enabled rpcgssd# systemctl is-enabled rpcbind# systemctl is-enabled rpcidmapd# systemctl is-enabled rpcsvcgssdEnsure no commands return enabled.
   3 Perform the following to determine if PROMPT is disabled:# grep "^PROMPT=" /etc/sysconfig/initPROMPT=no
   1 Perform the following to determine if RDS is disabled.# grep "install rds /bin/true" /etc/modprobe.confinstall rds /bin/true
   8 Perform the following to determine if RDS is disabled.# grep "install rds /bin/true" /etc/modprobe.d/CIS.confinstall rds /bin/true
   9 Perform the following to determine if RFC-recommended source route validation is enabled.# /sbin/sysctl net.ipv4.conf.all.rp_filternet.ipv4.conf.all.rp_filter = 1# /sbin/sysctl net.ipv4.conf.default.rp_filternet.ipv4.conf.default.rp_filter = 1
   1 Perform the following to determine if SCTP is disabled.# grep "install sctp /bin/true" /etc/modprobe.confinstall sctp /bin/true
   8 Perform the following to determine if SCTP is disabled.# grep "install sctp /bin/true" /etc/modprobe.d/CIS.confinstall sctp /bin/true
   1 Perform the following to determine if SELinux is enabled at boot time. # grep SELINUX=enforcing /etc/selinux/configSELINUX=enforcing# /usr/sbin/sestatusSELinux status: enabledCurrent mode: enforcingMode from config file: enforcingPolicy from config file: targeted
   6 Perform the following to determine if SELinux is enabled at boot time.# grep SELINUX=enforcing /etc/selinux/configSELINUX=enforcing# /usr/sbin/sestatusSELinux status: enabledCurrent mode: enforcingMode from config file: enforcingPolicy from config file: targeted
   9 Perform the following to determine if TCP SYN Cookies is enabled.# /sbin/sysctl net.ipv4.tcp_syncookiesnet.ipv4.tcp_syncookies = 1
   1 Perform the following to determine if TCP Wrappers is enabled.# yum list tcp-wrapperstcp_wrappers.
   6 Perform the following to determine if TCP Wrappers is enabled.# yum list tcp_wrapperstcp_wrappers.
   1 Perform the following to determine if TIPC is disabled.# grep "install tipc /bin/true" /etc/modprobe.confinstall tipc /bin/true
   8 Perform the following to determine if TIPC is disabled.# grep "install tipc /bin/true" /etc/modprobe.d/CIS.confinstall tipc /bin/true
   1 Perform the following to determine if X Windows is installed on the system.# grep "^id:" /etc/inittabid:3:initdefault# yum grouplist "X Window System"loaded plugins: rhnplugin, securitySeeting up Group ProcessAvailable Groups: X Window SystemDone
   1 Perform the following to determine if X Windows is installed on the system:# grep "^id:" /etc/inittabid:3:initdefault# yum grouplist "X Window System"loaded plugins: rhnplugin, securitySeeting up Group ProcessAvailable Groups: X Window SystemDone
   1 Perform the following to determine if XD/NX support is enabled.# yum list kernel-PAEkernel-PAE.  installed
   2 Perform the following to determine if a password is required to set command line boot parameters:# grep "^password" /etc/grub.confpassword --md5
   1 Perform the following to determine if a password is required to set command line boot parameters:# grep "^password" /etc/grub.confpassword --md5 _[Encrypted Password]_
   1 Perform the following to determine if a password is required to set command line boot parameters:# grep "^password" /etc/grub.confpassword --md5 _[Encrypted Password]_NOTE: Requirement is only that a password is set, other encryption options are available.
   2 Perform the following to determine if a password is required to set command line boot parameters:# grep "^set superusers" /boot/grub/grub.cfgset superusers="__"# grep_ "^_password_"_ /boot/grub/grub.cfgpassword_pbkdf2  At least one user must be specified as a super user and have a password assigned.
   3 Perform the following to determine if a password is required to set command line boot parameters:# grep "^set superusers" /boot/grub2/grub.cfgset superusers="__"# grep_ "^_password_"_ /boot/grub2/grub.cfgpassword_pbkdf2  At least one user must be specified as a super user and have a password assigned.
   2 Perform the following to determine if a password is set for the root user:# grep ^root:[*\!]: /etc/shadowNo results should be returned.
   9 Perform the following to determine if accepting source routed packets is disabled.# /sbin/sysctl net.ipv4.conf.all.accept_source_routenet.ipv4.conf.all.accept_source_route = 0# /sbin/sysctl net.ipv4.conf.default.accept_source_routenet.ipv4.conf.default.accept_source_route = 0
   9 Perform the following to determine if administrator activity is recorded.# grep actions /etc/audit/audit.rules-w /var/log/sudo.log -p wa -k actions
   9 Perform the following to determine if all ICMP echo and timestamp requests to broadcast and multicast addresses will be ignored.# /sbin/sysctl net.ipv4.icmp_echo_ignore_broadcastsnet.ipv4.icmp_echo_ignore_broadcasts = 1
   1 Perform the following to determine if anacron is enabled.# chkconfig --list anacronanacron: 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   6 Perform the following to determine if anacron is enabled.# rpm -q cronie-anacroncronie-anacron..
   6 Perform the following to determine if apache is disabled.# rpm -q httpdpackage httpd is not installed
   1 Perform the following to determine if apache is disabled.# yum list httpdhttpd.
   7 Perform the following to determine if at jobs are restricted.# stat -L /etc/at.deny > /dev/null# stat -L -c "%a %u %g" /etc/at.allow | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
  10 Perform the following to determine if audit logs are retained.# grep max_log_file_action /etc/audit/auditd.confmax_log_file_action = keep_logs
  10 Perform the following to determine if auditd is configured to notify the administrator and halt the system when audit logs are full.# grep space_left_action /etc/audit/auditd.confspace_left_action = email# grep action_mail_acct /etc/audit/auditd.confaction_mail_acct = root# grep admin_space_left_action /etc/audit/auditd.confadmin_space_left_action = halt
   4 Perform the following to determine if auditd is enabled.# chkconfig --list auditdauditd: 0: off 1: off 2: on 3: on 4: on 5: on 6: off
   3 Perform the following to determine if auditd is enabled.# systemctl is-enabled auditdenabled
   9 Perform the following to determine if bogus messages will be ignored.# /sbin/sysctl net.ipv4.icmp_ignore_bogus_error_responsesnet.ipv4.icmp_ignore_bogus_error_responses = 1
   9 Perform the following to determine if changes to /etc/sudoers are recorded.# grep scope /etc/audit/audit.rules-w /etc/sudoers -p wa -k scope
   3 Perform the following to determine if core dumps are restricted.# grep "hard core" /etc/security/limits.conf* hard core 0# /sbin/sysctl fs.suid_dumpablefs.suid_dumpable = 0
   4 Perform the following to determine if core dumps are restricted.# grep "hard core" /etc/security/limits.conf* hard core 0# sysctl fs.suid_dumpablefs.suid_dumpable = 0
   2 Perform the following to determine if core dumps are restricted.# grep "hard core" /etc/security/limits.conf* hard core 0# sysctl fs.suid_dumpablefs.suid_dumpable = 0Ensure no start conditions are listed for the apport or whoopsie services:# initctl show-config apportapport# initctl show-config whoopsiewhoopsie
   1 Perform the following to determine if cron is enabled.# chkconfig --list crondcron: 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   3 Perform the following to determine if cron is enabled.# chkconfig --list crondcrond: 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   3 Perform the following to determine if cron is enabled.# systemctl is-enabled crondenabled
   6 Perform the following to determine if dovecot is installed on the system.# rpm -q dovecotpackage dovecot is not installed
   1 Perform the following to determine if dovecot is installed on the system.# yum list dovecotdovecot.
   7 Perform the following to determine if events that modify the system's mandatory access controls are recorded# grep MAC-policy /etc/audit/audit.rules-w /etc/selinux/ -p wa -k MAC-policy
   1 Perform the following to determine if events that modify the system's mandatory access ontrols are recorded# grep MAC-policy /etc/audit/audit.rules-w /etc/selinux/ -p wa -k MAC-policy
   1 Perform the following to determine if events that modify the system's mandatory access ontrols are recorded# grep MAC_policy /etc/audit/audit.rules-w /etc/selinux/ -p wa -k MAC-policy
   9 Perform the following to determine if events that modify user/group information are recorded.# grep identity /etc/audit/audit.rules-w /etc/group -p wa -k identity-w /etc/passwd -p wa -k identity-w /etc/gshadow -p wa -k identity-w /etc/shadow -p wa -k identity-w /etc/security/opasswd -p wa -k identity
   6 Perform the following to determine if events where the system date and/or time has been modified are captured.On a 64 bit system, perform the following command and ensure the output is as shown. Note: "-a always,exit" may be specified as "-a exit,always".# grep time-change /etc/audit/audit.rules-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change-a always,exit -F arch=b64 -S clock_settime -k time-change-a always,exit -F arch=b32 -S clock_settime -k time-change-w /etc/localtime -p wa -k time-change# Execute the following command to restart auditd# pkill -P 1-HUP auditd On a 32 bit system, perform the following command and ensure the output is as shown. Note: "-a always,exit" may be specified as "-a exit,always".# grep time-change /etc/audit/audit.rules-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change-a always,exit -F arch=b32 -S clock_settime -k time-change-w /etc/localtime -p wa -k time-change# Execute the following command to restart auditd# pkill -P 1-HUP auditd
   2 Perform the following to determine if events where the system date and/or time has been modified are captured.On a 64 bit system, perform the following command and ensure the output is as shown.# grep time-change /etc/audit/audit.rules-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change-a always,exit -F arch=b64 -S clock_settime -k time-change-a always,exit -F arch=b32 -S clock_settime -k time-change-w /etc/localtime -p wa -k time-changeOn a 32 bit system, perform the following command and ensure the output is as shown.# grep time-change /etc/audit/audit.rules-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change-a always,exit -F arch=b32 -S clock_settime -k time-change-w /etc/localtime -p wa -k time-change
   1 Perform the following to determine if events where the system date and/or time has been modified are captured.On a 64 bit system, perform the following command and ensure the output is as shown.# grep time_change /etc/audit/audit.rules-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change-a always,exit -F arch=b64 -S clock_settime -k time-change-a always,exit -F arch=b32 -S clock_settime -k time-change-w /etc/localtime -p wa -k time-change# Execute the following command to restart auditd# pkill -P 1-HUP auditd On a 32 bit system, perform the following command and ensure the output is as shown.# grep time_change /etc/audit/audit.rules-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change-a always,exit -F arch=b32 -S clock_settime -k time-change-w /etc/localtime -p wa -k time-change# Execute the following command to restart auditd# pkill -P 1-HUP auditd
   3 Perform the following to determine if firewalld is enabled:# systemctl is-enabled firewalldenabled
   6 Perform the following to determine if kernel module loading and unloading is recorded. Note: "-a always,exit" may be specified as "-a exit,always".# grep modules /etc/audit/audit.rules-w /sbin/insmod -p x -k modules-w /sbin/rmmod -p x -k modules-w /sbin/modprobe -p x -k modulesFOR 32 BIT SYSTEMS-a always,exit -F arch=b32 -S init_module -S delete_module -k modulesFOR 64 BIT SYSTEMS-a always,exit -F arch=b64 -S init_module -S delete_module -k modules
   1 Perform the following to determine if kernel module loading and unloading is recorded.# grep modules /etc/audit/audit.rules-w /sbin/insmod -p x -k modules-w /sbin/rmmod -p x -k modules-w /sbin/modprobe -p x -k modules-a always,exit -S init_module -S delete_module -k modules
   2 Perform the following to determine if kernel module loading and unloading is recorded.# grep modules /etc/audit/audit.rules-w /sbin/insmod -p x -k modules-w /sbin/rmmod -p x -k modules-w /sbin/modprobe -p x -k modulesFOR 32 BIT SYSTEMS-a always,exit -F arch=b32 -S init_module -S delete_module -k modulesFOR 64 BIT SYSTEMS-a always,exit -F arch=b64 -S init_module -S delete_module -k modules
   1 Perform the following to determine if login and logout events are recorded.# grep logins /etc/audit/audit.rules-w /var/log/faillog -p wa -k logins-w /var/log/lastlog -p wa -k logins-w /var/log/tallylog -p -wa -k logins-w /var/log/btmp -p wa -k session
   8 Perform the following to determine if login and logout events are recorded.# grep logins /etc/audit/audit.rules-w /var/log/faillog -p wa -k logins-w /var/log/lastlog -p wa -k logins-w /var/log/tallylog -p wa -k logins
   6 Perform the following to determine if mctrans is disabled:# rpm -q mcstransmcstrans..
   6 Perform the following to determine if net-snmp is installed on the system.# rpm -q net-snmppackage net-snmp is not installed
   1 Perform the following to determine if net-snmp is installed on the system.# yum list net-snmpnet.snmp.
   9 Perform the following to determine if net.ipv4.ip_forward is enabled on the system.# /sbin/sysctl net.ipv4.ip_forwardnet.ipv4.ip_forward = 0
   1 Perform the following to determine if pam_deny.so is a requisite in the service. Perform this command for each PAM-aware authentication service.# grep "^auth" /etc/pam.d/sshd auth requisite pam_deny.so
   1 Perform the following to determine if publishing is disabled.# grep "^disable-publishing=yes" /etc/avahi/avahi-daemon.confdisable-publishing=yes
   1 Perform the following to determine if publishing is restricted:# grep "^disable-publishing=yes" /etc/avahi/avahi-daemon.confdisable-publishing=yes# grep "^publish" /etc/avahi/avahi-daemon.confpublish-address=nopublish-binfo=nopublish-workstation=nopublish-domain=no
   1 Perform the following to determine if rsh is instaled on the system.# yum list rshrsh.
   6 Perform the following to determine if rsh is installed on the system.# rpm -q rshpackage rsh is not installed
   6 Perform the following to determine if rsh-server is installed on the system.# rpm -q rsh-serverpackage rsh-server is not installed
   1 Perform the following to determine if rsh-server is installed on the system.# yum list rsh-serverrsh-server.
   1 Perform the following to determine if rsyslog is enabled.# chkconfig --list syslogsyslog 0:off 1:off 2:off 3:off 4:off 5:off 6:off# chkconfig --list rsyslogrsyslog 0:off 1:off 2:on 3:on 4:on 5:on 6:off
   3 Perform the following to determine if rsyslog is enabled.# systemctl is-enabled rsyslogenabled
   6 Perform the following to determine if samba is installed on the system.# rpm -q sambapackage samba is not installed
   1 Perform the following to determine if samba is installed on the system.# yum list sambasamba.
   9 Perform the following to determine if send packet redirects is disabled.# /sbin/sysctl net.ipv4.conf.all.send_redirectsnet.ipv4.conf.all.send_redirects = 0# /sbin/sysctl net.ipv4.conf.default.send_redirectsnet.ipv4.conf.default.send_redirects = 0
   1 Perform the following to determine if session initiation information is collected.# grep session /etc/audit/audit.rules-w /var/run/utmp -p wa -k session-w /var/log/wtmp -p wa -k session
   8 Perform the following to determine if session initiation information is collected.# grep session /etc/audit/audit.rules-w /var/run/utmp -p wa -k session-w /var/log/wtmp -p wa -k session-w /var/log/btmp -p wa -k session
   1 Perform the following to determine if setroubleshoot is disabled.# chkconfig --list setroubleshootsetroubleshoot 0: off 1: off 2: off 3: off 4: off 5: off 6: off
   6 Perform the following to determine if squid is installed on the system.# rpm -q squidpackage squid is not installed
   1 Perform the following to determine if squid is installed on the system.# yum list squidsquid.__ __ __
   1 Perform the following to determine if suspicious packets are logged.# /sbin/sysctl net.ipv4.conf.all.log_martiansnet.ipv4.conf.all.log_martians = 1
   8 Perform the following to determine if suspicious packets are logged.# /sbin/sysctl net.ipv4.conf.all.log_martiansnet.ipv4.conf.all.log_martians = 1# /sbin/sysctl net.ipv4.conf.default.log_martiansnet.ipv4.conf.default.log_martians = 1
   6 Perform the following to determine if talk is installed on the system.# rpm -q talkpackage talk is not installed
   1 Perform the following to determine if talk is installed on the system.# yum list talktalk.
   6 Perform the following to determine if talk-server is installed on the system:# rpm -q talk-serverpackage talk-server is not installed
   1 Perform the following to determine if talk-server is installed on the system:# yum list talk-servertalk.
   6 Perform the following to determine if tftp is installed on the system.# rpm -q tftppackage tftp is not installed
   1 Perform the following to determine if tftp is installed on the system.# yum list tftptftp.
   6 Perform the following to determine if tftp-server is installed on the system.# rpm -q tftp-serverpackage tftp-server is not installed
   1 Perform the following to determine if tftp-server is installed on the system.# yum list tftp-servertftp-server.
   2 Perform the following to determine if the /boot/grub/grub.cfg file has the correct ownership:# stat -c "%u %g" /boot/grub/grub.cfg | egrep "^0 0"If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /boot/grub/grub.cfg file permissions are correct:# stat -L -c "%a" /boot/grub/grub.cfg | egrep ".00" If the above command emits no output then the system is not configured as recommended.
   3 Perform the following to determine if the /boot/grub2/grub.cfg file has the correct ownership:# stat -L -c "%u %g" /boot/grub2/grub.cfg | egrep "0 0" If the above command emits no output then the system is not configured as recommended.
   3 Perform the following to determine if the /boot/grub2/grub.cfg file permissions are correct:# stat -L -c "%a" /boot/grub2/grub.cfg | egrep ".00" If the above command emits no output then the system is not configured as recommended.
   1 Perform the following to determine if the /etc/anacrontab file has the correct permissions.# stat -L -c "%a %u %g" /etc/anacrontab | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   6 Perform the following to determine if the /etc/anacrontab file has the correct permissions.# stat -L -c "%a %u %g" /etc/anacrontab | egrep ".00 0 0"If the above command emits no output then the system is not configured as recommended.
   7 Perform the following to determine if the /etc/cron.d directory has the correct permissions.# stat -L -c "%a %u %g" /etc/cron.d | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /etc/cron.d directory has the correct permissions.# stat -c "%a %u %g" /etc/cron.d | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   7 Perform the following to determine if the /etc/cron.daily directory has the correct permissions.# stat -L -c "%a %u %g" /etc/cron.daily | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /etc/cron.daily directory has the correct permissions.# stat -c "%a %u %g" /etc/cron.daily | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   7 Perform the following to determine if the /etc/cron.hourly file has the correct permissions.# stat -L -c "%a %u %g" /etc/cron.hourly | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /etc/cron.hourly file has the correct permissions.# stat -c "%a %u %g" /etc/cron.hourly | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   1 Perform the following to determine if the /etc/cron.monthly directory has the correct permissions.# stat -L -c "%a %u %g" /etc/cron.monthly | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   6 Perform the following to determine if the /etc/cron.monthly directory has the correct permissions.# stat -L -c "%a %u %g" /etc/cron.monthly | egrep ".00 0 0"If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /etc/cron.monthly directory has the correct permissions.# stat -c "%a %u %g" /etc/cron.monthly | egrep ".00 0 0"If the above command emits no output then the system is not configured as recommended.
   7 Perform the following to determine if the /etc/cron.weekly directory has the correct permissions.# stat -L -c "%a %u %g" /etc/cron.weekly | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /etc/cron.weekly directory has the correct permissions.# stat -c "%a %u %g" /etc/cron.weekly | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   7 Perform the following to determine if the /etc/crontab file has the correct permissions.# stat -L -c "%a %u %g" /etc/crontab | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   2 Perform the following to determine if the /etc/crontab file has the correct permissions.# stat -c "%a %u %g" /etc/crontab | egrep ".00 0 0" If the above command emits no output then the system is not configured as recommended.
   3 Perform the following to determine if the /etc/grub.conf file has the correct ownership:# stat -L -c "%u %g" /etc/grub.conf | egrep "0 0" If the above command emits no output then the system is not configured as recommended.
   1 Perform the following to determine if the /etc/grub.conf file has the correct ownership:# stat -L -c "%u %g" /etc/grub.conf | egrep "^0 0$" If the above command emits no output then the system is not configured as recommended.
   4 Perform the following to determine if the /etc/grub.conf file permissions are correct:# stat -L -c "%a" /etc/grub.conf | egrep ".00" If the above command emits no output then the system is not configured as recommended.
   1 Perform the following to determine if the TTL setting is correct.# grep "^check-response-ttl=yes" /etc/avahi/avahi-daemon.confcheck-response-ttl=yes
   1 Perform the following to determine if the X Window server is installed on the system:# grep "^id:" /etc/inittabid:3:initdefault# rpm -q xorg-x11-server-common
   7 Perform the following to determine if the appropriate system logs are rotated.# grep '{' /etc/logrotate.d/syslog/var/log/messages /var/log/secure /var/log/maillog /var/log/spooler /var/log/boot.log /var/log/cron {
   7 Perform the following to determine if the audit configuration is immutable.# grep "^-e 2" /etc/audit/audit.rules-e 2
   2 Perform the following to determine if the audit configuration is immutable.# tail -n 1 /etc/audit/audit.rules-e 2
   6 Perform the following to determine if the daemon umask is set. # grep umask /etc/sysconfig/initumask 027
   1 Perform the following to determine if the daemon umask is set.# grep umask /etc/sysconfig/initumask 027
   1 Perform the following to determine if the password-hashing algorithm is set to SHA-512:# authconfig --test | grep hashing | grep sha512 If the above command emits no output then the system is not configured as recommended
   6 Perform the following to determine if the password-hashing algorithm is set to SHA-512:# authconfig --test | grep hashing | grep sha512If the above command emits no output then the system is not configured as recommended
   1 Perform the following to determine if the remediation in the section has been performed:# ls -l /etc/cron.deny[no output returned]# ls -l /etc/at.deny[no output returned]# ls -l /etc/cron.allow-rw------- 1 root root  /etc/cron.allow# ls -l /etc/at.allow-rw------- 1 root root  /etc/at.allow
   8 Perform the following to determine if the remediation in the section has been performed:# ls -l /etc/cron.deny[no output returned]# ls -l /etc/at.deny[no output returned]# ls -l /etc/cron.allow-rw------- 1 root root /etc/cron.allow# ls -l /etc/at.allow-rw------- 1 root root /etc/at.allow
   1 Perform the following to determine if the system is configured as recommended:# grep -e "^/tmp" /etc/fstab | grep /var/tmp/tmp /var/tmp none bind 0 0# mount | grep -e "^/tmp" | grep /var/tmp/tmp on /var/tmp type none (rw,bind) If the above commands emit no ouput then the system is not configured as recommended.
   2 Perform the following to determine if the system is configured as recommended:# grep -e "^/tmp" /etc/fstab | grep /var/tmp/tmp /var/tmp none bind 0 0# mount | grep -e "^/tmp" | grep /var/tmp/tmp on /var/tmp type none (rw,bind) If the above commands emit no output then the system is not configured as recommended.
   1 Perform the following to determine if the system is configured as recommended:# grep -e "^/tmp" /etc/fstab | grep /var/tmp/tmp /var/tmp none none 0 0# mount | grep -e "^/tmp" | grep /var/tmp/tmp on /var/tmp type none (rw,bind) If the above commands emit no ouput then the system is not configured as recommended.
   1 Perform the following to determine if the system is configured as recommended:# grep -e "^/tmp" /etc/fstab | grep /var/tmp/tmp /var/tmp none none 0 0# mount | grep -e "^/tmp" | grep /var/tmp/tmp on /var/tmp type none (rw,bind) If the above commands emit no output then the system is not configured as recommended.
   4 Perform the following to determine if the system is configured as recommended:# grep -e "^/tmp[[:space:]]" /etc/fstab | grep /var/tmp/tmp /var/tmp none none 0 0# mount | grep -e "^/tmp[[:space:]]" | grep /var/tmp/tmp on /var/tmp type none (rw,bind) If the above commands emit no output then the system is not configured as recommended.
   9 Perform the following to determine if the system is disabled from accepting router advertisements:# /sbin/sysctl net.ipv6.conf.all.accept_ranet.ipv6.conf.all.accept_ra = 0# /sbin/sysctl net.ipv6.conf.default.accept_ranet.ipv6.conf.default.accept_ra = 0
   7 Perform the following to determine if the targeted policy is selected in the /etc/selinux/config file.# grep SELINUXTYPE=targeted /etc/selinux/configSELINUXTYPE=targeted# /usr/sbin/sestatusSELinux status: enabledCurrent mode: enforcingMode from config file: enforcingPolicy from config file: targeted Note: If your organization requires stricter policies, verify that they are selected by using the "grep" command on the /etc/selinux/config file.
   6 Perform the following to determine if the telnet package is on the system.# rpm -q telnetpackage telnet is not installed
   1 Perform the following to determine if the telnet package is on the system.# yum list telnettelnet.
   6 Perform the following to determine if the telnet-server package is on the system.# rpm -q telnet-serverpackage telnet-server is not installed
   1 Perform the following to determine if the telnet-server package is on the system.# yum list telnet-servertelnet-server.
   9 Perform the following to determine if there is a cron job scheduled to run the aide check.# crontab -u root -l | grep aide0 5 * * * /usr/sbin/aide --check
   6 Perform the following to determine if unconfined daemons are running on the system. # ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'[no output produced]
   1 Perform the following to determine if unconfined daemons are running on the system.# ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }[no output produced]
   1 Perform the following to determine if users are not permitted to use cached credentials:# yum list pam_ccredspam_ccreds.
   3 Perform the following to determine if virtual memory is randomized.# /sbin/sysctl kernel.randomize_va_spacekernel.randomize_va_space = 2
   6 Perform the following to determine if virtual memory is randomized.# sysctl kernel.randomize_va_spacekernel.randomize_va_space = 2
   2 Perform the following to determine if wireless interfaces are active. # ip link showValidate that all interfaces using wireless are down.
   2 Perform the following to determine if wireless interfaces are active.# ifconfig -a Validate that all interfaces using wireless are down.
   4 Perform the following to determine if wireless interfaces are active.# ifconfig -aValidate that all interfaces using wireless are down.
   6 Perform the following to determine if xinetd is installed on the system.# rpm -q xinetdpackage xinetd is not installed
   1 Perform the following to determine if xinetd is installed on the system.# yum list xinetdxinted.
   6 Perform the following to determine if ypbind is installed on the system.# rpm -q ypbindpackage ypbind is not installed
   1 Perform the following to determine if ypbind is installed on the system.# yum list ypbindypbind.
   6 Perform the following to determine if ypserv is installed on the system.# rpm -q ypservpackage ypserv is not installed
   1 Perform the following to determine if ypserv is installed on the system.# yum list ypservypserv.
   1 Perform the following to determine or prelinking is disabled.# grep PRELINKING /etc/sysconfig/prelinkPRELINKING=no
   2 Perform the following to determine the current setting for reuse of older passwords:# grep "remember" /etc/pam.d/common-passwordpassword [success=1 default=ignore] pam_unix.so obscure sha512 remember=5
   2 Perform the following to determine the current setting for reuse of older passwords:# grep "remember" /etc/pam.d/system-authpassword sufficient pam_unix.so remember=5
   5 Perform the following to determine the current setting for reuse of older passwords:# grep "remember" /etc/pam.d/system_authpassword sufficient pam_unix.so remember=5
   2 Perform the following to determine the current settings for user lockout.# grep "pam_tally2" /etc/pam.d/loginauth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900
   1 Perform the following to determine the current settings for user lockout.# grep "pam_tally2" /etc/pam.d/system-authauth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900
   5 Perform the following to determine the current settings for userID lockout.# grep "pam_faillock" /etc/pam.d/password-authauth required pam_faillock.so preauth audit silent deny=5 unlock_time=900auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time=900# grep "pam_unix.so" /etc/pam.d/password-auth | grep success=1auth [success=1 default=bad] pam_unix.so# grep "pam_faillock" /etc/pam.d/system-authauth required pam_faillock.so preauth audit silent deny=5 unlock_time=900auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time=900# grep "pam_unix.so" /etc/pam.d/system-auth | grep success=1auth [success=1 default=bad] pam_unix.so
   1 Perform the following to determine the current settings for userID lockout.# grep "pam_tally2" /etc/pam.d/system-authauth required pam_tally2.so deny=5 onerr=fail
   2 Perform the following to determine the current settings in the /etc/pam.d/common-password file.# grep pam_cracklib.so /etc/pam.d/common-passwordpassword required pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1
   2 Perform the following to determine the current settings in the /etc/pam.d/system-auth file.# grep pam_pwquality.so /etc/pam.d/system-authpassword requisite pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=Check settings in /etc/security/pwquality.conf:minlen=14dcredit=-1ucredit=-1ocredit=-1lcredit=-1
   5 Perform the following to determine the current settings in the pam_cracklib.so file.# grep pam_cracklib.so /etc/pam.d/system-authpassword required pam_cracklib.so try_first_pass retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1
   7 Perform the following to determine the maximum size of the audit log files. # grep max_log_file /etc/audit/auditd.confmax_log_file = __
   1 Perform the following to determine the maximum size of the audit log files.# grep max_log_file /etc/audit/auditd.confmax_log_file = MB
   2 Perform the following to determine the maximum size of the audit log files.# grep max_log_file /etc/audit/auditd.confmax_log_file = __
   1 Perform the following to determine which protocol is configured on your system.# grep use-ipv /etc/avahi/avahi-daemon.confuse-ipv6 = noIf ipv4 is only used.Use-ipv4 = noIf ipv6 is only used.
   1 Perform the following to determine# grep "sulogin" /etc/inittab~:S:wait:/sbin/sulogin
   1 Perform the following to determine# grep SINGLE /etc/sysconfig/initSINGLE=/sbin/sulogin# grep "PROMPT" /etc/sysconfig/initPROMPT=no
   1 Perform the following to ensure the system is not booting into graphical mode:# grep "^id:" /etc/inittabid:3:initdefaultPerform the following to determine if the X Window server is installed on the system:# rpm -q xorg-x11-server-commonpackage xorg-x11-server-common is not installed
   3 Perform the following to ensure the system is not booting into graphical mode:ls -l /usr/lib/systemd/system/default.target | grep graphical.targetNo results should be returned.Perform the following to determine if the X Window server is installed on the system:# rpm -q xorg-x11-server-commonpackage xorg-x11-server-common is not installed
   1 Perform the following to verify integrity of installed packages.# rpm -qVa | awk '$2 != "c" { print $0}'If any output shows up, you may have an integrity issue with that package
   6 Perform the following to verify integrity of installed packages.# rpm -qVa | awk '$2 != "c" { print $0}'If any output shows up, you may have an integrity issue with that packageNOTE: Actions in other areas of the benchmark change permissions on some files to make them more secure than the default, which would cause this check to fail. It is important to validate the packages either have the permissions they were intended to have, or have been intentionally altered. It is recommended that any output generated in the audit step be investigated to justify the discrepancy.
   2 Perform the following to verify that SELinux is enabled at boot time:# grep selinux=0 /boot/grub2/grub.cfg[no output produced]# grep enforcing=0 /boot/grub2/grub.cfg[no output produced]
   5 Perform the following to verify that SELinux is enabled at boot time:# grep selinux=0 /etc/grub.conf[no output produced]# grep enforcing=0 /etc/grub.conf[no output produced]
   2 Review the /etc/logrotate.d/rsyslog file to determine if the appropriate system logs are rotated according to your site policy.
   8 Review the /etc/rsyslog.conf file and verify that logs are sent to a central host (where _logfile.example.com_ is the name of your central log host). # grep "^*.*[^I][^I]*@" /etc/rsyslog.conf*.* @@loghost.example.com
   1 Review the /etc/rsyslog.conf file and verify that logs are sent to a central host (where logfile.example.com is the name of your central log host).# grep "^*.*[^I][^I]*@" /etc/rsyslog.conf*.* @@loghost.example.com
   1 Review the /etc/syslog.conf file and verify that logs are sent to a central host (where logfile.example.com is the name of your central log host).# grep "^*.*[^I][^I]*@" /etc/syslog.conf*.* @loghost.example.com
   2 Review the contents of the /etc/rsyslog.conf and /etc/rsyslog.d/* files to ensure appropriate logging is set. In addition, perform the following command and ensure that the log files are logging information:# ls -l /var/log/
   7 Review the contents of the /etc/rsyslog.conf file to ensure appropriate logging is set. In addition, perform the following command and ensure that the log files are logging information:# ls -l /var/log/
   1 Review the contents of the /etc/syslog.conf file to ensure appropriate logging is set. In addition, perform the following command and ensure that the log files are logging information:# ls -l /var/log
   1 Run the following command and verify that no output is returned: # /bin/grep '^+:' /etc/group
   1 Run the following command and verify that no output is returned: # /bin/grep '^+:' /etc/passwd
   1 Run the following command and verify that no output is returned: # /bin/grep '^+:' /etc/shadow
   1 Run the following command and verify that no output is returned:# /bin/cat /etc/shadow | /bin/awk -F : '($2 == "" ) { print $1 " does not have a password "}'
   6 Run the following command and verify that no output is returned:# /bin/cat /etc/shadow | /bin/awk -F: '($2 == "" ) { print $1 " does not have a password "}'
   2 Run the following command and verify that no output is returned:# /bin/cat /etc/shadow | /usr/bin/awk -F: '($2 == "" ) { print $1 " does not have a password "}'
   8 Run the following command and verify that no output is returned:# /bin/grep '^+:' /etc/group
   8 Run the following command and verify that no output is returned:# /bin/grep '^+:' /etc/passwd
   8 Run the following command and verify that no output is returned:# /bin/grep '^+:' /etc/shadow
   1 Run the following command and verify that only the word "root" is returned:# /bin/cat /etc/passwd | /bin/awk -F: '($2 == 0) { print $1 }'root
   6 Run the following command and verify that only the word "root" is returned:# /bin/cat /etc/passwd | /bin/awk -F: '($3 == 0) { print $1 }'root
   2 Run the following command and verify that only the word "root" is returned:# /bin/cat /etc/passwd | /usr/bin/awk -F: '($3 == 0) { print $1 }'root
   2 Run the following command to determine if IPv6 is enabled:# ip addr | grep inet6No results should be returned.
   2 Run the following command to determine the current OS level:# uname -r or# cat /etc/centos-release
   1 Run the following command to determine the current OS level:# uname -r or# cat /etc/oracle-release
   2 Run the following command to determine the current OS level:# uname -r or# cat /etc/redhat-release
   1 Run the following command to determine the current OS level:# uname -r or# cat /etc/system-release
   1 Run the following command to determine the current OS level:# uname -ror# cat /etc/redhat-release
   2 Run the following command to determine the ownership of the /etc/shadow file. Ensure it is owned by user root, and group root or shadow.# /bin/ls -l /etc/shadow-rw-r----- 1 root shadow 712 Jul 22 21:33 shadow
  11 Run the following command to determine the permissions on the /etc/group file. # /bin/ls -l /etc/group-rw-r--r-- 1 root root 762 Sep 23 002 /etc/group
   7 Run the following command to determine the permissions on the /etc/group file.# /bin/ls -l /etc/group-rw-r--r-- 1 root root 762 Sep 23 002 /etc/group
  12 Run the following command to determine the permissions on the /etc/gshadow file. # /bin/ls -l /etc/gshadow---------- 1 root root 633 Sep 23 2002 /etc/gshadow
   2 Run the following command to determine the permissions on the /etc/gshadow file.# /bin/ls -l /etc/gshadow-r-------- 1 root root 633 Sep 23 2002 /etc/gshadow
   8 Run the following command to determine the permissions on the /etc/hosts.allow file. # /bin/ls -l /etc/hosts.allow-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/hosts.allow
   8 Run the following command to determine the permissions on the /etc/hosts.deny file. # /bin/ls -l /etc/hosts.deny-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/hosts.deny
   1 Run the following command to determine the permissions on the /etc/hosts.deny file.# /bin/ls -l /etc/hosts.deny-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/hosts.deny
   6 Run the following command to determine the permissions on the /etc/passwd file. # /bin/ls -l /etc/passwd-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/passwd
   3 Run the following command to determine the permissions on the /etc/passwd file.# /bin/ls -l /etc/passwd-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/passwd
   6 Run the following command to determine the permissions on the /etc/shadow file. # /bin/ls -l /etc/shadow---------- 1 root root 633 Sep 23 2002 /etc/shadow
   6 Run the following command to determine the permissions on the /etc/shadow file. # /bin/ls -l /etc/shadow---------- 1 root root 762 Sep 23 2002 /etc/shadow
   2 Run the following command to determine the permissions on the /etc/shadow file. Ensure world has no access, group has no write or execute access.# /bin/ls -l /etc/shadow-rw-r----- 1 root shadow 712 Jul 22 21:33 shadow
   1 Run the following command to determine the permissions on the /etc/shadow file.# /bin/ls -l /etc/shadow-r-------- 1 root root 633 Sep 23 2002 /etc/shadow
   1 Run the following command to determine the permissions on the /etc/shadow file.# /bin/ls -l /etc/shadow-r-------- 1 root root 762 Sep 23 2002 /etc/shadow
   4 Run the following command to determine the user and group ownership on the /etc/passwd file. # /bin/ls -l /etc/passwd-rw-r--r-- 1 root root 762 Sep 23 002 /etc/passwd
   5 Run the following command to determine the user and group ownership on the /etc/passwd file.# /bin/ls -l /etc/passwd-rw-r--r-- 1 root root 762 Sep 23 002 /etc/passwd
   8 Run the following command to determine the user and group ownership on the /etc/ssh/sshd_config file.# /bin/ls -l /etc/ssh/sshd_config-rw------- 1 root root 762 Sep 23 002 /etc/ssh/sshd_config
   1 Run the following command to ensure that the system has the Amazon GPG key properly installed:# rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey
   2 Run the following command to ensure that the system has the CentOS GPG key properly installed:# rpm -q --queryformat "%{SUMMARY}n" gpg-pubkey
   1 Run the following command to ensure that the system has the Oracle GPG key properly installed:# rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey
   2 Run the following command to ensure that the system has the Red Hat GPG key properly installed:# rpm -q --queryformat "%{SUMMARY}n" gpg-pubkey
   1 Run the following command to ensure that the system has the Red HatGPG key properly installed:# rpm -q --queryformat "%{SUMMARY}n" gpg-pubkey
   1 Run the following command to review all installed packages. Note that this may be very time consuming and may be best scheduled via the cron utility. It is recommended that the output of this command be redirected to a file that can be reviewed later.# rpm -Va --nomtime --nosize --nomd5 --nolinkto > _
   6 Run the following command to review all installed packages. Note that this may be very time consuming and may be best scheduled via the cron utility. It is recommended that the output of this command be redirected to a file that can be reviewed later.# rpm -Va --nomtime --nosize --nomd5 --nolinkto > __
   7 Run the following command to verify that gpgcheck is set to 1 in all occurrences of the /etc/yum.conf file:# grep gpgcheck /etc/yum.confgpgcheck=1
   6 Run the following command to verify the contents of the /etc/hosts.allow file. # cat /etc/hosts.allow[contents will vary, depending on your network configuration]
   1 Run the following command to verify the contents of the /etc/hosts.allow file.# CAT /ETC/HOSTS.ALLOW[contents will vary, depending on your network configuration]
   2 Run the following command to verify the contents of the /etc/hosts.allow file.# cat /etc/hosts.allow[contents will vary, depending on your network configuration]
   2 Run the following command:# dpkg -l xserver-xorg-core*Ensure no matching packages are listed as installed.
   2 Run the following command:# dpkg -s biosdevnameEnsure package status is not-installed or dpkg returns no info is available.
   2 Run the following command:# dpkg -s nisEnsure package status is not-installed or dpkg returns no info is available.
   2 Run the following command:# dpkg -s prelinkEnsure package status is not-installed or dpkg returns no info is available.
   2 Run the following command:# dpkg -s slapdEnsure package status is not-installed or dpkg returns no info is available.
   2 Run the following command:# dpkg -s talkEnsure package status is not-installed or dpkg returns no info is available.
   8 Run the following commands and ensure that the files exist and have the correct permissions.# /bin/ls -l /etc/motd-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/motd# ls /etc/issue-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/issue# ls /etc/issue.net-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/issue.net The commands above simply validate the presence of the /etc/motd, /etc/issue and /etc/issue.net files. Review the contents of these files with the "cat" command and ensure that it is appropriate for your organization.
   1 Run the following commands and ensure that the files exist and have the correct permissions.# /bin/ls -l /etc/motd-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/motd# ls /etc/issue-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/issue# ls /etc/issue.net-rw-r--r-- 1 root root 2055 Jan 30 16:30 /etc/issue.netThe commands above simply validate the presence of the /etc/motd, /etc/issue and /etc/issue.net files. Review the contents of these files with the "cat" command and ensure that it is appropriate for your organization.
   4 Run the following commands to determine if the system is configured as recommended. # grep /tmp /etc/fstab | grep nodev# mount | grep /tmp | grep nodev If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is configured as recommended. # grep /tmp /etc/fstab | grep noexec# mount | grep /tmp | grep noexec If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is configured as recommended. # grep /tmp /etc/fstab | grep nosuid# mount | grep /tmp | grep nosuid If either command emits no output then the system is not configured as recommended.
   4 Run the following commands to determine if the system is configured as recommended.# grep "[[:space:]]/tmp[[:space:]]" /etc/fstab | grep nodev# mount | grep "[[:space:]]/tmp[[:space:]]" | grep nodev If either command emits no output then the system is not configured as recommended.
   4 Run the following commands to determine if the system is configured as recommended.# grep "[[:space:]]/tmp[[:space:]]" /etc/fstab | grep noexec# mount | grep "[[:space:]]/tmp[[:space:]]" | grep noexec If either command emits no output then the system is not configured as recommended.
   4 Run the following commands to determine if the system is configured as recommended.# grep "[[:space:]]/tmp[[:space:]]" /etc/fstab | grep nosuid# mount | grep "[[:space:]]/tmp[[:space:]]" | grep nosuid If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is configured as recommended.# grep /home /etc/fstab | grep nodev# mount | grep /home | grep nodev If either command emits no output then the system is not configured as recommended.
   1 Run the following commands to determine if the system is configured as recommended.# grep /tmp /etc/fstab | grep nodev# mount | grep /tmp | grep nodev If either command emits no output then the system is not configured as recommended.
   3 Run the following commands to determine if the system is configured as recommended.# grep /tmp /etc/fstab | grep noexec# mount | grep /tmp | grep noexec If either command emits no output then the system is not configured as recommended.
   3 Run the following commands to determine if the system is configured as recommended.# grep /tmp /etc/fstab | grep nosuid# mount | grep /tmp | grep nosuid If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is in configured as recommended:# grep /dev/shm /etc/fstab | grep nodev# mount | grep /dev/shm | grep nodev If either command emits no ouput then the system is not configured as recommended.
   5 Run the following commands to determine if the system is in configured as recommended:# grep /dev/shm /etc/fstab | grep nodev# mount | grep /dev/shm | grep nodev If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is in configured as recommended:# grep /dev/shm /etc/fstab | grep noexec# mount | grep /dev/shm | grep noexec If either command emits no ouput then the system is not configured as recommended.
   5 Run the following commands to determine if the system is in configured as recommended:# grep /dev/shm /etc/fstab | grep noexec# mount | grep /dev/shm | grep noexec If either command emits no output then the system is not configured as recommended.
   1 Run the following commands to determine if the system is in configured as recommended:# grep /dev/shm /etc/fstab | grep nosuid# mount | grep /dev/shm | grep nosuid If either command emits no ouput then the system is not configured as recommended.
   6 Run the following commands to determine if the system is in configured as recommended:# grep /dev/shm /etc/fstab | grep nosuid# mount | grep /dev/shm | grep nosuid If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is in configured as recommended:# grep /run/shm /etc/fstab | grep nodev# mount | grep /run/shm | grep nodev If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is in configured as recommended:# grep /run/shm /etc/fstab | grep noexec# mount | grep /run/shm | grep noexec If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if the system is in configured as recommended:# grep /run/shm /etc/fstab | grep nosuid# mount | grep /run/shm | grep nosuid If either command emits no output then the system is not configured as recommended.
   2 Run the following commands to determine if there are packages to be updated:# apt-get update# apt-get --just-print upgrade
   2 Run the following commands:# dpkg -s rsh-client# dpkg -s rsh-redone-clientEnsure package status is not-installed or dpkg returns no info is available for both.
   5 Run the following script to determine if any system accounts can be accessed:egrep -v "^+" /etc/passwd | awk -F: '($1!="root" && $1!="sync" && $1!="shutdown" && $1!="halt" && $3
   4 Run the following script to determine if any system accounts can be accessed:egrep -v "^\+" /etc/passwd | awk -F: '($1!="root" && $1!="sync" && $1!="shutdown" && $1!="halt" && $3
   5 Run the following to determine if rsyslog is listening for remote messages:# grep '$ModLoad imtcp.so' /etc/rsyslog.conf$ModLoad imtcp.so# grep '$InputTCPServerRun' /etc/rsyslog.conf$InputTCPServerRun 514
   2 Run the following to ensure aide is installed:# dpkg -s aideEnsure package status is installed ok installed.
   2 Run the following to ensure auditd is installed:# dpkg -s auditdEnsure package status is installed ok installed.Run the following to ensure proper start links for auditd exist in /etc/rc*.d:# ls /etc/rc*.d/S*auditd/etc/rc2.d/S37auditd /etc/rc3.d/S37auditd /etc/rc4.d/S37auditd /etc/rc5.d/S37auditdStart links should exist for run levels 2, 3, 4, and 5.
   2 Run the following to ensure no start links for apache2 exist in /etc/rc*.d:# ls /etc/rc*.d/S*apache2No results should be returned.
   2 Run the following to ensure no start links for bind9 exist in /etc/rc*.d:# ls /etc/rc*.d/S*bind9No results should be returned.
   2 Run the following to ensure no start links for snmpd exist in /etc/rc*.d:# ls /etc/rc*.d/S*snmpdNo results should be returned.
   2 Run the following to ensure ntp is installed:# dpkg -s ntpEnsure package status is installed ok installed.The following script checks for the correct parameters on restrict default and restrict -6 default:# grep "restrict .* default" /etc/ntp.confrestrict -4 default kod nomodify notrap nopeer noqueryrestrict -6 default kod nomodify notrap nopeer noqueryPerform the following to determine if the system is configured to use an NTP Server and that the ntp daemon is running as an unprivileged user.# grep "^server" /etc/ntp.confserver# grep "RUNASUSER=ntp" /etc/init.d/ntpRUNASUSER=ntp
   2 Run the following to ensure tcpd is installed:# dpkg -s tcpdEnsure package status is installed ok installed.
   2 Run the following to see if your kernel has identified and activated NX/XD protection.# dmesg | grep NXNX (Execute Disable) protection: active
   1 The following script checks for the correct parameters on restrict default and restrict -6 default:# grep "restrict default" /etc/ntp.confrestrict default kod nomodify nopeer notrap noquery# grep "restrict -6 default" /etc/ntp.confrestrict -6 default kod nomodify nopeer notrap noquery Perform the following to determine if the system is configured to use an NTP Server and that the ntp daemon is running as an unprivileged user.# grep "^server" /etc/ntp.confserver # grep "ntp:ntp" /etc/sysconfig/ntpdOPTIONS="-u ntp:ntp -p /var/run/ntpd.pid"
   6 The following script checks for the correct parameters on restrict default and restrict -6 default:# grep "restrict default" /etc/ntp.confrestrict default kod nomodify notrap nopeer noquery# grep "restrict -6 default" /etc/ntp.confrestrict -6 default kod nomodify notrap nopeer noquery Perform the following to determine if the system is configured to use an NTP Server and that the ntp daemon is running as an unprivileged user.# grep "^server" /etc/ntp.confserver # grep "ntp:ntp" /etc/sysconfig/ntpdOPTIONS="-u ntp:ntp -p /var/run/ntpd.pid"
   1 This script checks for the presence of .forward files that may be in violation of the site security policy.#!/bin/bash echo "The Output from the Audit of Control 9.21 - Check for Presence of User .forward Files is"for dir in `logins -ox | /bin/awk -F: '($8 == "PS") { print $6 }'`; do for file in $dir/.forward; do if [ ! -h "$file" -a -f "$file" ]; then echo ".forward file $file exists" fi donedone
   4 This script checks for the presence of .forward files that may be in violation of the site security policy.#!/bin/bash for dir in `/bin/cat /etc/passwd | /bin/awk -F: '{ print $6 }'`; do if [ ! -h "$dir/.forward" -a -f "$dir/.forward" ]; then echo ".forward file $dir/.forward exists" fidone
   2 This script checks for the presence of .forward files that may be in violation of the site security policy.#!/bin/bash for dir in `/bin/cat /etc/passwd |\ /bin/awk -F: '{ print $6 }'`; do if [ ! -h "$dir/.forward" -a -f "$dir/.forward" ]; then echo ".forward file $dir/.forward exists" fidone
   2 This script checks for the presence of .forward files that may be in violation of the site security policy.#!/bin/bash for dir in `/bin/cat /etc/passwd |\ /usr/bin/awk -F: '{ print $6 }'`; do if [ ! -h "$dir/.forward" -a -f "$dir/.forward" ]; then echo ".forward file $dir/.forward exists" fidone
   3 This script checks to make sure all GIDs in the /etc/group file are unique. You can also use the /usr/sbin/grpck command to check for other inconsistencies in the /etc/group file.#!/bin/bash echo "The Output for the Audit of Control 9.2.16 - Check for Duplicate GIDs is"/bin/cat /etc/group | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then grps=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2  /etc/group | xargs` echo "Duplicate GID ($2): ${grps}" fidone
   2 This script checks to make sure all GIDs in the /etc/group file are unique. You can also use the /usr/sbin/grpck command to check for other inconsistencies in the /etc/group file.#!/bin/bash echo "The Output for the Audit of Control 9.2.16 - Check for Duplicate GIDs is"/bin/cat /etc/group | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then grps=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2 \ /etc/group | xargs` echo "Duplicate GID ($2): ${grps}" fidone
   2 This script checks to make sure all UIDs in the /etc/group file are unique. You can also use the /usr/sbin/grpck command to check for other inconsistencies in the /etc/group file.#!/bin/bash /bin/cat /etc/group | /usr/bin/cut -f3 -d":" | /usr/bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then grps=`/usr/bin/awk -F: '($3 == n) { print $1 }' n=$2 \ /etc/group | xargs` echo "Duplicate GID ($2): ${grps}" fidone
   1 This script checks to make sure all UIDs in the /etc/group file are unique. You can also use the /usr/sbin/grpck command to check for other inconsistencies in the /etc/group file.#!/bin/bash echo "The Output for the Audit of Control 9.16 - Check for Duplicate GIDs is"/bin/cat /etc/group | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then grps=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2  /etc/group | xargs` echo "Duplicate GID ($2): ${grps}" fidone
   1 This script checks to make sure all UIDs in the /etc/group file are unique. You can also use the /usr/sbin/grpck command to check for other inconsistencies in the /etc/group file.#!/bin/bash echo "The Output for the Audit of Control 9.2.16 - Check for Duplicate GIDs is"/bin/cat /etc/group | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then grps=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2  /etc/group | xargs` echo "Duplicate GID ($2): ${grps}" fidone
   2 This script checks to make sure all UIDs in the /etc/passwd file are unique.#!/bin/bash /bin/cat /etc/passwd | /usr/bin/cut -f3 -d":" | /usr/bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then users=`/usr/bin/awk -F: '($3 == n) { print $1 }' n=$2 \ /etc/passwd | /usr/bin/xargs` echo "Duplicate UID ($2): ${users}" fidone
   1 This script checks to make sure all UIDs in the /etc/passwd file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.15 - Check for Duplicate UIDs is"/bin/cat /etc/passwd | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then users=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2  /etc/passwd | /usr/bin/xargs` echo "Duplicate UID ($2): ${users}" fidone
   4 This script checks to make sure all UIDs in the /etc/passwd file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.2.15 - Check for Duplicate UIDs is"/bin/cat /etc/passwd | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then users=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2  /etc/passwd | /usr/bin/xargs` echo "Duplicate UID ($2): ${users}" fidone
   2 This script checks to make sure all UIDs in the /etc/passwd file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.2.15 - Check for Duplicate UIDs is"/bin/cat /etc/passwd | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then users=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2 \ /etc/passwd | /usr/bin/xargs` echo "Duplicate UID ($2): ${users}" fidone
   2 This script checks to make sure all group names in the /etc/group file are unique.#!/bin/bash cat /etc/group | /usr/bin/cut -f1 -d":" | /usr/bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then gids=`/usr/bin/awk -F: '($1 == n) { print $3 }' n=$2 \ /etc/group | xargs` echo "Duplicate Group Name ($2): ${gids}" fidone
   1 This script checks to make sure all group names in the /etc/group file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.19 - Check for Duplicate Group Names is"cat /etc/group | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then gids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2  /etc/group | xargs` echo "Duplicate Group Name ($2): ${gids}" fidone
   4 This script checks to make sure all group names in the /etc/group file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.2.19 - Check for Duplicate Group Names is"cat /etc/group | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then gids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2  /etc/group | xargs` echo "Duplicate Group Name ($2): ${gids}" fidone
   2 This script checks to make sure all group names in the /etc/group file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.2.19 - Check for Duplicate Group Names is"cat /etc/group | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then gids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2 \ /etc/group | xargs` echo "Duplicate Group Name ($2): ${gids}" fidone
   2 This script checks to make sure all user names in the /etc/passwd file are unique.#!/bin/bash cat /etc/passwd | /usr/bin/cut -f1 -d":" | /usr/bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then uids=`/usr/bin/awk -F: '($1 == n) { print $3 }' n=$2 \ /etc/passwd | xargs` echo "Duplicate User Name ($2): ${uids}" fidone
   1 This script checks to make sure all user names in the /etc/passwd file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.18 - Check for Duplicate User Names is"cat /etc/passwd | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then uids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2  /etc/passwd | xargs` echo "Duplicate User Name ($2): ${uids}" fidone
   4 This script checks to make sure all user names in the /etc/passwd file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.2.18 - Check for Duplicate User Names is"cat /etc/passwd | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c | while read x ; do [ -z "${x}" ] & then uids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2  /etc/passwd | xargs` echo "Duplicate User Name ($2): ${uids}" fidone
   2 This script checks to make sure all user names in the /etc/passwd file are unique.#!/bin/bash echo "The Output for the Audit of Control 9.2.18 - Check for Duplicate User Names is"cat /etc/passwd | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c |\ while read x ; do [ -z "${x}" ] & then uids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2 \ /etc/passwd | xargs` echo "Duplicate User Name ($2): ${uids}" fidone
   1 This script checks to make sure that "reserved" UIDs (0-499 range) are not assigned to non-system (default) accounts.#!/bin/bash echo "The Output for the Audit of Control 9.17 - Check That Reserved UIDS Are Assigned to System Accounts is"defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon exim"/bin/cat /etc/passwd | /bin/awk -F: '($3 < 500) { print $1" "$3 }' | while read user uid; do found=0 for tUser in ${defUsers} do if [ ${user} = ${tUser} ]; then found=1 fi done if [ $found -eq 0 ]; then echo "User $user has a reserved UID ($uid)." fi done
   2 This script checks to make sure that "reserved" UIDs (0-499 range) are not assigned to non-system (default) accounts.#!/bin/bash echo "The Output for the Audit of Control 9.2.17 - Check That Reserved UIDS Are Assigned to System Accounts is"defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon usbmuxd rtkit abrt saslauth pulse postfix tcpdump"/bin/cat /etc/passwd | /bin/awk -F: '($3 < 500) { print $1" "$3 }' | while read user uid; do found=0 for tUser in ${defUsers} do if [ ${user} = ${tUser} ]; then found=1 fi done if [ $found -eq 0 ]; then echo "User $user has a reserved UID ($uid)." fi done
   2 This script checks to make sure that "reserved" UIDs (0-499 range) are not assigned to non-system (default) accounts.#!/bin/bash echo "The Output for the Audit of Control 9.2.17 - Check That Reserved UIDS Are Assigned to System Accounts is"defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon usbmuxd rtkit abrt saslauth pulse postfix tcpdump"/bin/cat /etc/passwd |\ /bin/awk -F: '($3 < 500) { print $1" "$3 }' |\ while read user uid; do found=0 for tUser in ${defUsers} do if [ ${user} = ${tUser} ]; then found=1 fi done if [ $found -eq 0 ]; then echo "User $user has a reserved UID ($uid)." fi done
   4 This script checks to make sure that home directories assigned in the /etc/passwd file exist.#!/bin/bash cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 1000 -a ! -d "$dir" -a $user != "nfsnobody" ]; then echo "The home directory ($dir) of user $user does not exist." fidone
   2 This script checks to make sure that home directories assigned in the /etc/passwd file exist.#!/bin/bash cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 500 -a ! -d "$dir" -a $user != "nfsnobody" -a $user != "nobody" ]; then echo "The home directory ($dir) of user $user does not exist." fidone
   2 This script checks to make sure that home directories assigned in the /etc/passwd file exist.#!/bin/bash cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 500 -a ! -d "$dir" -a $user != "nfsnobody" ]; then echo "The home directory ($dir) of user $user does not exist." fidone
   1 This script checks to make sure that home directories assigned in the /etc/passwd file exist.#!/bin/bash echo "The Output for the Audit of Control 9.13 - Check That Defined Home Directories Exist is"defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon" cat /etc/passwd | awk -F: '{ print $1 " " $6 }' | while read user dir; do found=0 for n in $defUsers do if [ "$user" = "$n" ] then found=1 break fi done if [ $found -eq 0 ] then if [ -z "${dir}" ]; then echo "User $user has no home directory." elif [ ! -d $dir ]; then echo "User $user home directory not found" fi fi done
   4 This script checks to make sure users own the home directory they are assigned to in the /etc/passwd file.#!/bin/bash cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 1000 -a -d "$dir" -a $user != "nfsnobody" ]; then owner=$(stat -L -c "%U" "$dir") if [ "$owner" != "$user" ]; then echo "The home directory ($dir) of user $user is owned by $owner." fi fidone
   4 This script checks to make sure users own the home directory they are assigned to in the /etc/passwd file.#!/bin/bash cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 500 -a -d "$dir" -a $user != "nfsnobody" ]; then owner=$(stat -L -c "%U" "$dir") if [ "$owner" != "$user" ]; then echo "The home directory ($dir) of user $user is owned by $owner." fi fidone
   1 This script checks to make sure users own the home directory they are assigned to in the /etc/passwd file.#!/bin/bash echo "The Output for the Audit of Control 9.14 - Check User Home Directory Ownership is"defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid named xfs gdm sabayon"/usr/bin/cat /etc/passwd |  awk -F: '{ print $1 " " $6 }' | while read user dir; do found=0 for n in $defUsers do if [ "$user" = "$n" ] then found=1 break fi done if [ $found -eq "0" ] then if [ -d ${dir} ] then owner=`ls -ld $dir | sed -e 's/ */ /g' | cut -f3 -d" "` if [ "$owner" != "$user" ] then echo "Home directory for $user owned by $owner" fi fi fi done
   8 To verify the correct SSH setting, run the following command and verify that  is either /etc/issue or /etc/issue.net:# grep "^Banner" /etc/ssh/sshd_configBanner
   1 To verify the correct SSH setting, run the following command and verify that at least one commands output is as shown:# grep "^AllowUsers" /etc/ssh/sshd_config AllowUsers # grep "^AllowGroups" /etc/ssh/sshd_config AllowGroups # grep "^DenyUsers" /etc/ssh/sshd_config DenyUsers # grep "^DenyGroups" /etc/ssh/sshd_config DenyGroups
   6 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "Ciphers" /etc/ssh/sshd_config Ciphers aes128-ctr,aes192-ctr,aes256-ctr
   8 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^AllowUsers" /etc/ssh/sshd_config AllowUsers # grep "^AllowGroups" /etc/ssh/sshd_config AllowGroups # grep "^DenyUsers" /etc/ssh/sshd_config DenyUsers # grep "^DenyGroups" /etc/ssh/sshd_config DenyGroups
   1 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^Banner" /etc/ssh/sshd_configBanner
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^ClientAliveInterval" /etc/ssh/sshd_config ClientAliveInterval 300# grep "^ClientAliveCountMax" /etc/ssh/sshd_config ClientAliveCountMax 0
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^HostbasedAuthentication" /etc/ssh/sshd_config HostbasedAuthentication no
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^IgnoreRhosts" /etc/ssh/sshd_config IgnoreRhosts yes
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^LogLevel" /etc/ssh/sshd_config LogLevel INFO
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^MaxAuthTries" /etc/ssh/sshd_config MaxAuthTries 4
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^PermitEmptyPasswords" /etc/ssh/sshd_config PermitEmptyPasswords no
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^PermitRootLogin" /etc/ssh/sshd_config PermitRootLogin no
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^Protocol" /etc/ssh/sshd_configProtocol 2
   1 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^UsePrivilegeSeparation no" /etc/ssh/sshd_config(command should return no output)
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep "^X11Forwarding" /etc/ssh/sshd_config X11Forwarding no
   3 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep -v "Ciphers" /etc/ssh/sshd_config Ciphers aes128-ctr,aes192-ctr,aes256-ctr
   9 To verify the correct SSH setting, run the following command and verify that the output is as shown:# grep PermitUserEnvironment /etc/ssh/sshd_config PermitUserEnvironment no
   1 Verify that /etc/hosts.deny exists and is configured to deny all hosts not explicitly listed in /etc/hosts.allow:# GREP "ALL: ALL" /ETC/HOSTS.DENYALL: ALL
   8 Verify that /etc/hosts.deny exists and is configured to deny all hosts not explicitly listed in /etc/hosts.allow:# grep "ALL: ALL" /etc/hosts.denyALL: ALL
   9 Verify that an audit line for each setuid/setgid program identified in the find command appears in the audit file with the above attributes.
   3 Verify that the system is registered by executing the following command:# yum check-update
   2 Verify that there is a /home file partition in the /etc/fstab file.# grep "[[:space:]]/home[[:space:]]" /etc/fstabIf the command emits no output then the system is not configured as recommended.
   4 Verify that there is a /tmp file partition in the /etc/fstab file.# grep "[[:space:]]/tmp[[:space:]]" /etc/fstab
   2 Verify that there is a /tmp file partition in the /etc/fstab file.# grep "[[:space:]]/tmp[[:space:]]" /etc/fstabIf the command emits no output then the system is not configured as recommended.
   2 Verify that there is a /tmp file partition in the /etc/fstab file.# grep "[[:space:]]/tmp[[:space:]]" /etc/fstabdave
   1 Verify that there is a /tmp file partition in the /etc/fstab file.# grep /tmp /etc/fstab
   2 Verify that there is a /var file partition in the /etc/fstab file.# grep "[[:space:]]/var[[:space:]]" /etc/fstabIf the command emits no output then the system is not configured as recommended.
   2 Verify that there is a /var/log file partition in the /etc/fstab file.# grep "[[:space:]]/var/log[[:space:]]" /etc/fstabIf the command emits no output then the system is not configured as recommended.
   2 Verify that there is a /var/log/audit file partition in the /etc/fstab file.# grep "[[:space:]]/var/log/audit[[:space:]]" /etc/fstabIf the command emits no output then the system is not configured as recommended.
